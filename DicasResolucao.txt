--- 30/07/2022 - DESAFIO 01
1 - clonei o arquivo do github da Rocket
  - 1.1 - não criar no diretório, deixar o comando "git clone" faça isso.
2 - com o projeto aberto rodei " yarn " para instalar os pacotes
3 - rodei o comando " yarn android " para executar o projeto
4 - em uma outra janela do VSCode rode o comando " yarn test " para acompanhar os testes passando
  conforme as alterações no projeto.
5 - obs.: o state em react ou react-native, é assíncrono, então se der um console.log() no state, ele mostrara o state
  muito provavel com o valor antigo, antes da renderização
6 - Sobre alteração de state:
  // 1 - procura o id passado no array de tasks
    // 2 - se encontrar atualiza o debounce
    // 3 - atualiza o array de tasks com o novo valor desse id alterado
    /* obs:
      1 - Shalow Cpy - copia a referência de memoria do objeto, ou seja, se altera no array copiado então altera 
        tbm no original, isso quebra o principio de imutabilidade 
     */
    // criando um novo array, copiando o conteudo real e não a referencia, serve para casos que o tipo de dados
    //  desse array são primitivos

--- 30/07/2022 - DESAFIO 02 (ADD alertas)
1 - Cololar o Alert como opção de sim ou não na function handleRemoveTask, arquivo Home.tsx
2 - criar a function handleEditTask, no arquivo Home.tsx
3 - criar um tipagem "EditTaskArgs" com type ao invez de interface(opcional), para declarar os parâmetro 
  que a function acima recebera. passando para a function na forma de objeto: handleEditTask({ taskId, taskNewTitle }: EditTaskArgs)
4 - depois de criada a function, colocar ela no return da pagina Home.tsx para que ela possa ser acessa pelo TaskList,
  Obs.: adicionar tbm esse EditTask no TasksListProps do arquivo TaskList.tsk 
5 - separar a logica do Item que esta dentro do TaskList.tsk , criar o component TaskItem.tsx
6 - para ser mais rapido e não ter que passar o testID item por props, comentei os testID do arquivo TaskItem.tsx
7 - obs.: mo arquivo Home.tsx colocar o export no type EditTaskArgs que criamos, pois deve ser importador nos arquivos:
  TaskItem.tsx e TaskList.tsx, para ser colocado na declaraçao de interface TasksListProps, das duas paginas
8 - na pagina TaskItem.tsx alterar a interface para TaskItemProps
9 - alterar style do icone de lixeira, estava no ItemWrapper.tsx e foi passada para o TaskItem.tsx
--- daqui para baixo alterções no TaskItem.tsx:
10 - declarar uma useRef (serve para manipular algumas ações como tirar o teclado da tela)
11 - user o useEffect para controlar as ações de focus e exibição do teclado, de acordo com o state isEditting.
--- trocando de Text para TextInput e criando novo icone e o diviser:
--- 05/08/2022:
12 - Alerar o TouchableOpacity que contem o ícone da lixei para conter outros 2 itens
13 - 

